<?xml version='1.0'?>
<sdf version='1.4'>
<model name='sjtu_drone'>
   <!-- model plugins should be put in the front of the sensor plugins! 
  This might be a bug~
  -->
  <!-- <static>true</static> -->
    <plugin name='simple_drone' filename='libplugin_drone.so'>
        <bodyName>base_link</bodyName>
        <imuTopic>/drone/imu</imuTopic>
        <rollpitchProportionalGain>10.0</rollpitchProportionalGain>
        <rollpitchDifferentialGain>5.0</rollpitchDifferentialGain>
        <rollpitchLimit>0.5</rollpitchLimit>
        <yawProportionalGain>2.0</yawProportionalGain>
        <yawDifferentialGain>1.0</yawDifferentialGain>
        <yawLimit>1.5</yawLimit>
        <velocityXYProportionalGain>5.0</velocityXYProportionalGain>
        <velocityXYDifferentialGain>2.3</velocityXYDifferentialGain>
        <velocityXYLimit>2</velocityXYLimit>
        <velocityZProportionalGain>5.0</velocityZProportionalGain>
        <velocityZDifferentialGain>1.0</velocityZDifferentialGain>
        <velocityZLimit>-1</velocityZLimit>
        <positionXYProportionalGain>1.1</positionXYProportionalGain>
        <positionXYDifferentialGain>0.0</positionXYDifferentialGain>
        <positionXYIntegralGain>0.0</positionXYIntegralGain>
        <positionXYLimit>5</positionXYLimit>
        <positionZProportionalGain>1.0</positionZProportionalGain>
        <positionZDifferentialGain>0.2</positionZDifferentialGain>
        <positionZLimit>-1</positionZLimit>
        <maxForce>30</maxForce>
        <motionSmallNoise>0.05</motionSmallNoise>
        <motionDriftNoise>0.03</motionDriftNoise>
        <motionDriftNoiseTime>5.0</motionDriftNoiseTime>
    </plugin>

     <!-- pose of the quadrotor in the world frame -->
     <pose>0 0 0.04 0 0 0</pose>
      <link name='base_link'>
      <inertial>
        <mass>1.477</mass>
  <pose>0 0 0 0 0 0</pose>
  <inertia>
  <ixx>0.1152</ixx>
  <ixy>0</ixy>
  <ixz>0</ixz>
  <iyy>0.1152</iyy>
  <iyz>0</iyz>
  <izz>0.218</izz>

  </inertia>
      </inertial>

      <visual name='visual'>
        <geometry>
    <mesh><uri>file://models/sjtu_drone/quadrotor_4.dae</uri></mesh>
        </geometry>
      </visual>

      <collision name='collision'>
        <geometry>
  <mesh><uri>file://models/sjtu_drone/quadrotor_4.dae</uri></mesh>
        </geometry>
      </collision>

      <gravity>1</gravity>
    

     <!-- IMU sensor in 100fps -->
  <sensor name='sensor_imu' type='imu'>
  <always_on> 1 </always_on>
  <update_rate> 100 </update_rate>
  <pose> 0 0 0 0 0 0 </pose>
  <plugin name='ros_imu' filename='libplugin_ros_imu.so'>
  </plugin> 
  <imu>
    <noise>
        <type>gaussian</type>
      <rate>
        <mean> 0 </mean>
        <stddev> 0 </stddev>
      </rate>
      <accel>
        <mean> 0 </mean>
        <stddev> 0.00 </stddev>
      </accel>
    </noise>
  </imu>
  </sensor>

  <!-- Gazebo camera -->
  <!-- <sensor name="camera1" type="camera">
        <camera>
          <horizontal_fov>1.8</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.005</stddev>
          </noise>
        </camera>
  <pose> 0.2 0.0 0.0 0 0 0 </pose>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>false</visualize>
  <plugin name='camera1' filename='libgazebo_ros_camera.so'>
        <cameraName>drone/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <frameName>camera_link</frameName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
  </plugin>
  </sensor> -->

  <!-- Gazebo depth camera -->
  <sensor name="camera2" type="depth">
        <camera>
          <horizontal_fov>1.8</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.005</stddev>
          </noise>
        </camera>
  <pose> 0.2 0.0 0.0 0 0 0 </pose>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>false</visualize>
  <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
          <baseline>0.2</baseline>
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera_ir</cameraName>
          <imageTopicName>/camera/color/image_raw</imageTopicName>
          <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
          <depthImageCameraInfoTopicName>/camera/depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
          <frameName>camera_link</frameName>
          <pointCloudCutoff>0.3</pointCloudCutoff>
          <pointCloudCutoffMax>20</pointCloudCutoffMax>
          <distortionK1>0</distortionK1>
          <distortionK2>0</distortionK2>
          <distortionK3>0</distortionK3>
          <distortionT1>0</distortionT1>
          <distortionT2>0</distortionT2>
          <CxPrime>0</CxPrime>
          <Cx>0</Cx>
          <Cy>0</Cy>
          <focalLength>0</focalLength>
          <hackBaseline>0</hackBaseline>
        </plugin>
  </sensor>

  <!-- Sonar sensor in 100fps -->
<!--   <sensor name='sensor_sonar' type='sonar'>
  <always_on>1</always_on>
  <visualize>0</visualize>
  <update_rate>100</update_rate>
  <pose> 0.5 0 0.3 0 1.570796327 3.141592653 </pose>
  <plugin name='ros_sonar' filename='libplugin_ros_sonar.so'>
  </plugin> 
  <sonar>
    <min>0</min>
    <max>5</max>
          <radius>1.33974596</radius>
        </sonar>
        </sensor> -->

  <!-- front camera -->
<!--   <sensor name="front_camera" type="camera">
        <camera>
          <horizontal_fov>2.09</horizontal_fov>
          <image>
            <width>640</width>
            <height>360</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.005</stddev>
          </noise>
        </camera>
  <pose> 0.2 0.0 0.0 0 0 0 </pose>
        <always_on>1</always_on>
        <update_rate>60</update_rate>
        <visualize>false</visualize>
  <plugin name='front_camera' filename='libplugin_ros_cam.so'>
  <imageTopicName>/drone/front_camera/image_raw</imageTopicName>
  </plugin> 
      </sensor> -->

  <!-- downward looking camera -->
<!--   <sensor name="down_camera" type="camera">
        <camera>
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <width>640</width>
            <height>360</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.005</stddev>
          </noise>
        </camera>
  <pose> 0.0 0.0 0.0 0 1.570796326794897 0 </pose>
        <always_on>1</always_on>
        <update_rate>15</update_rate>
        <visualize>false</visualize>
  <plugin name='down_camera' filename='libplugin_ros_cam.so'>
  <imageTopicName>/drone/down_camera/image_raw</imageTopicName>
  </plugin> 
      </sensor> -->
<!-- <gazebo>
  <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>50.0</updateRate>
    <bodyName>base_link</bodyName>
    <topicName>ground_truth/state</topicName>
    <gaussianNoise>0.01</gaussianNoise>
    <frameName>world</frameName>
    <xyzOffsets>0 0 0</xyzOffsets>
    <rpyOffsets>0 0 0</rpyOffsets>
  </plugin>
</gazebo> -->

     </link> 
</model>
</sdf>